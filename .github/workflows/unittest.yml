name: ExecutExmentUnittest

on: [push]
#  pull_request:
#    paths:
#      - 'backend/**'
#      - 'infrastructure/**'
#      - 'docker-compose.yml'


jobs:
  exment-testing:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        db: ["mysql", "mariadb"]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: oreno4649/docker-exment
          path: ./docker-exment

      - uses: actions/checkout@v2
        with:
          repository: oreno4649/exment-boilerplate
          path: ./docker-exment/exment-boilerplate

      - uses: actions/checkout@v2
        with:
          path: ./docker-exment/exment-boilerplate/exment

      - name: Docker Compose Version
        run: docker-compose --version

      - name: Make ${{ matrix.db }} up
        working-directory: docker-exment
        run: |
          ls -al
          make ${{ matrix.db }}-up

      - name: copy compose.dev.json
        working-directory: docker-exment
        run: |
          docker-compose -f docker-compose.yml exec -T php cp composer.dev.json composer.json
          docker-compose -f docker-compose.yml exec -T php cp composer.dev.lock composer.lock

      - name: Make ${{ matrix.db }} Initialize
        working-directory: docker-exment
        run: |
          make ${{ matrix.db }}-init

      - name: Test feature
        working-directory: docker-exment
        run: |
          docker-compose -f docker-compose.yml exec -T php composer run exment:test:feature

      - name: Test unit
        working-directory: docker-exment
        run: |
          docker-compose -f docker-compose.yml exec -T php composer run exment:test:unit

      - name: Test browser
        working-directory: docker-exment
        run: |
          docker-compose -f docker-compose.yml exec -T php composer run exment:test:browser
